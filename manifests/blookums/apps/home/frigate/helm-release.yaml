---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: frigate
  namespace: home
spec:
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 5m
  chart:
    spec:
      chart: app-template
      version: 2.0.3
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
      interval: 60m
  values:
    service:
      main:
        ports:
          http:
            port: &port 5000
          rtsp:
            enabled: true
            port: 8554
    controllers:
      main:
        containers:
          main:
            strategy: Recreate
            image:
              repository: ghcr.io/blakeblackshear/frigate
              tag: 0.12.1
            env:
              TZ: America/New_York
              FRIGATE_MQTT_HOST: ${SECRET_MQTT_HOST}
              FRIGATE_MQTT_USER: ${SECRET_MQTT_USERNAME}
              FRIGATE_MQTT_PASSWORD: ${SECRET_MQTT_PASSWORD}
              PLUS_API_KEY: ${SECRET_FRIGATE_PLUS_API_KEY}
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /api/version
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
              startup:
                enabled: false
            resources:
              requests:
                memory: 1000Mi
                cpu: 500m
              limits:
                memory: 6000Mi

    ingress:
      main:
        annotations:
          kubernetes.io/tls-acme: 'true'
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.networking.svc.cluster.local/oauth2/auth
          nginx.ingress.kubernetes.io/auth-signin: ${SECRET_AUTH_URL}
          cert-manager.io/cluster-issuer: letsencrypt-production
          hajimari.io/icon: mdi:cctv
        hosts:
          - host: frigate.${SECRET_DOMAIN}
            paths:
              - path: /
                service:
                  name: frigate
                  port: *port
        tls:
          - hosts:
              - frigate.${SECRET_DOMAIN}
            secretName: frigate.cert
    persistence:
      config-file:
        type: configMap
        name: frigate-configmap
        globalMounts:
          - path: /config/config.yml
            subPath: config.yaml
            readOnly: true
      data:
        type: persistentVolumeClaim
        storageClass: ceph-hdd-xfs
        accessMode: ReadWriteOnce
        size: 2Ti
        retain: true
      media:
        type: persistentVolumeClaim
        storageClass: ceph-hdd-xfs
        accessMode: ReadWriteOnce
        size: 20Ti
        retain: true
      usb:
        type: hostPath
        hostPath: /dev/bus/usb
      cache:
        type: emptyDir
        medium: Memory
        sizeLimit: 4Gi
        globalMounts:
          - path: /dev/shm
    defaultPodOptions:
      securityContext:
        # -- (bool) Privileged securityContext may be required if USB devices are accessed directly through the host machine
        privileged: true
      nodeSelector:
        google.feature.node.kubernetes.io/coral: 'true'
      annotations:
        backup.velero.io/backup-volumes: config,media,data
