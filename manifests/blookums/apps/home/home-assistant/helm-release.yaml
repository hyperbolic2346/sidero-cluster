---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: home-assistant
  namespace: home
spec:
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 10m
  chart:
    spec:
      chart: home-assistant
      version: 13.4.2
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
  values:
    image:
      repository: homeassistant/home-assistant
      tag: 2023.9.3
    persistence:
      config:
        enabled: true
        size: 10Gi
        storageClass: ceph-ssd
        retain: true
    ingress:
      main:
        enabled: true
        annotations:
          kubernetes.io/tls-acme: 'true'
          kubernetes.io/ingress.class: nginx
          cert-manager.io/cluster-issuer: letsencrypt-production
          nginx.org/websocket-services: home-assistant
        path: /
        hosts:
          - host: hass.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: hass-cert
            hosts:
              - hass.${SECRET_DOMAIN}
    probes:
      liveness:
        enabled: true
      readiness:
        enabled: true
    podAnnotations:
      backup.velero.io/backup-volumes: config
    resources:
      limits:
        memory: 2500Mi
        hugepages-2Mi: 500Mi
        cpu: 2000m
      requests:
        cpu: 500m
        memory: 2000Mi
        hugepages-2Mi: 500Mi
    monitoring:
      enabled: false
    postgresql:
      enabled: false
    addons:
      codeserver:
        enabled: true
        image:
          repository: codercom/code-server
          tag: 4.17.0
        workingDir: /config
        args:
          - --auth
          - none
          - --user-data-dir
          - /config/.vscode
          - --extensions-dir
          - /config/.vscode
        ingress:
          enabled: true
          annotations:
            kubernetes.io/tls-acme: 'true'
            kubernetes.io/ingress.class: nginx
            nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.networking.svc.cluster.local/oauth2/auth
            nginx.ingress.kubernetes.io/auth-signin: ${SECRET_AUTH_URL}
            cert-manager.io/cluster-issuer: letsencrypt-production
          hosts:
            - host: hass-code.${SECRET_DOMAIN}
              paths:
                - path: /
                  pathType: Prefix
          tls:
            - hosts:
                - hass-code.${SECRET_DOMAIN}
        volumeMounts:
          - name: config
            mountPath: /config
