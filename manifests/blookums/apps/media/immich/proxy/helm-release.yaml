---
# yaml-language-server: $schema=https://kubernetes-schemas.zinn.ca/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: &app immich-proxy
  namespace: media
spec:
  interval: 15m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s-charts
        namespace: flux-system
  maxHistory: 3
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: immich-server
  values:
    controller:
      replicas: 1
      strategy: RollingUpdate
      annotations:
        configmap.reloader.stakater.com/reload: immich-configmap
    image:
      repository: ghcr.io/immich-app/immich-proxy
      tag: v1.84.0
    envFrom:
      - configMapRef:
          name: immich-configmap
    service:
      main:
        ports:
          http:
            port: 8080
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          ingress.home.arpa/type: external
          kubernetes.io/tls-acme: 'true'
          kubernetes.io/ingress.class: nginx
          nginx.ingress.kubernetes.io/proxy-body-size: '0'
          nginx.ingress.kubernetes.io/proxy-read-timeout: '600'
          nginx.ingress.kubernetes.io/proxy-send-timeout: '600'
          cert-manager.io/cluster-issuer: letsencrypt-production
        hosts:
          - host: immich.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: immich-cert
            hosts:
              - immich.${SECRET_DOMAIN}

    topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app.kubernetes.io/name: *app
