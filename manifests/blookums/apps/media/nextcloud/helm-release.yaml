---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: nextcloud
  namespace: media
spec:
  releaseName: nextcloud
  interval: 10m
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  chart:
    spec:
      chart: nextcloud
      version: 4.3.6
      sourceRef:
        kind: HelmRepository
        name: nextcloud-charts
        namespace: flux-system
  values:
    image:
      tag: 25.0.2
    ingress:
      enabled: true
      tls:
        - hosts:
            - nextcloud.${SECRET_DOMAIN}
          secretName: netcloud-cert
      annotations:
        nginx.ingress.kubernetes.io/enable-cors: 'true'
        nginx.ingress.kubernetes.io/cors-allow-headers: X-Forwarded-For
        cert-manager.io/cluster-issuer: letsencrypt-production
        kubernetes.io/ingress.class: nginx
        nginx.ingress.kubernetes.io/proxy-body-size: 4G
        nginx.ingress.kubernetes.io/server-snippet: |-
          server_tokens off;
          proxy_hide_header X-Powered-By;

          rewrite ^/.well-known/webfinger /index.php/.well-known/webfinger last;
          rewrite ^/.well-known/nodeinfo /index.php/.well-known/nodeinfo last;
          rewrite ^/.well-known/host-meta /public.php?service=host-meta last;
          rewrite ^/.well-known/host-meta.json /public.php?service=host-meta-json;
          location = /.well-known/carddav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /.well-known/caldav {
            return 301 $scheme://$host/remote.php/dav;
          }
          location = /robots.txt {
            allow all;
            log_not_found off;
            access_log off;
          }
          location ~ ^/(?:build|tests|config|lib|3rdparty|templates|data)/ {
            deny all;
          }
          location ~ ^/(?:autotest|occ|issue|indie|db_|console) {
            deny all;
          }
    nextcloud:
      host: nextcloud.${SECRET_DOMAIN}
      username: ${SECRET_NEXTCLOUD_USERNAME}
      password: ${SECRET_NEXTCLOUD_DEFAULT_PW}
      configs:
        proxy.config.php: |-
          <?php
          $CONFIG = array(
            'trusted_proxies' => array(
              0 => '127.0.0.1',
              1 => '10.0.0.0/8',
            ),
            'forwarded_for_headers' => array('HTTP_X_FORWARDED_FOR'),
            'overwrite.cli.url' => 'https://nextcloud.${SECRET_DOMAIN}',
            'overwritehost' => 'nextcloud.${SECRET_DOMAIN}',
            'overwriteprotocol' => 'https',
          );
          ?>
      mail:
        enabled: true
        fromAddress: ${SECRET_NEXTCLOUD_FROM_EMAIL}
        domain: gmail.com
        smtp:
          host: smtp.gmail.com
          secure: ssl
          port: 587
          aythtype: LOGIN
          name: ${SECRET_NEXTCLOUD_FROM_EMAIL}
          password: ${SECRET_NEXTCLOUD_FROM_EMAIL_PW}
      extraVolumes:
        - name: hugepage
          emptyDir:
            medium: HugePages-2Mi
      extraVolumeMounts:
        - name: hugepage
          mountPath: /dev/hugepages
    resources:
      requests:
        cpu: 1000m
        memory: 2Gi
        hugepages-2Mi: 250Mi
      limits:
        cpu: 2000m
        memory: 5Gi
        hugepages-2Mi: 250Mi
    nginx:
      enabled: false
    internalDatabase:
      enabled: false
      name: nextcloud
    externalDatabase:
      enabled: true
      type: postgresql
      password: ${SECRET_NEXTCLOUD_POSTGRESQL_PW}
    mariadb:
      enabled: false
    redis:
      enabled: false
    postgresql:
      enabled: true
      image:
        tag: 16.0.0-debian-11-r13
      global:
        postgresql:
          auth:
            password: ${SECRET_NEXTCLOUD_POSTGRESQL_PW}
      primary:
        persistence:
          enabled: true
          storageClass: ceph-ssd-xfs
        resources:
          requests:
            cpu: 250m
            memory: 256Mi
            hugepages-2Mi: 256Mi
          limits:
            cpu: 1000m
            memory: 1Gi
            hugepages-2Mi: 256Mi
    cronjob:
      enabled: false
      # Nexcloud image is used as default but only curl is needed
      image: {}
      # Every 15 minutes
      # Note: Setting this to any any other value than 15 minutes might
      #  cause issues with how nextcloud background jobs are executed
      schedule: '*/5 * * * *'
      annotations: {}
      # Set curl's insecure option if you use e.g. self-signed certificates
      curlInsecure: true
      failedJobsHistoryLimit: 5
      successfulJobsHistoryLimit: 2

    service:
      type: ClusterIP
      port: 8080
      loadBalancerIP: nil

    persistence:
      # Nextcloud Data (/var/www/html)
      enabled: true
      annotations: {}
      ## nextcloud data Persistent Volume Storage Class
      ## If defined, storageClassName: <storageClass>
      ## If set to "-", storageClassName: "", which disables dynamic provisioning
      ## If undefined (the default) or set to null, no storageClassName spec is
      ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
      ##   GKE, AWS & OpenStack)
      ##
      storageClass: ceph-hdd-xfs
      accessMode: ReadWriteOnce
      size: 2Ti
      retain: true

    podAnnotations:
      backup.velero.io/backup-volumes: nextcloud-main,nextcloud-config

    ## Liveness and readiness probe values
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 3
      successThreshold: 1
    startupProbe:
      enabled: true
      initialDelaySeconds: 30
      periodSeconds: 10
      timeoutSeconds: 5
      failureThreshold: 30
      successThreshold: 1

    hpa:
      enabled: false
      cputhreshold: 60
      minPods: 1
      maxPods: 10

    nodeSelector: {}

    tolerations: []

    affinity: {}
