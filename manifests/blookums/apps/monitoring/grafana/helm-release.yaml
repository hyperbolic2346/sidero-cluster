---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: grafana
  namespace: monitoring
spec:
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  interval: 5m
  chart:
    spec:
      chart: grafana
      version: 6.59.4
      sourceRef:
        kind: HelmRepository
        name: grafana-charts
        namespace: flux-system
      interval: 5m
  install:
    createNamespace: true
  values:
    replicas: 1
    env:
      GF_EXPLORE_ENABLED: true
      GF_PANELS_DISABLE_SANITIZE_HTML: true
      GF_LOG_FILTERS: rendering:debug
      GF_DATE_FORMATS_USE_BROWSER_LOCALE: true
      GF_DATE_FORMATS_FULL_DATE: MMM Do, YYYY hh:mm:ss a
      GF_DATE_FORMATS_INTERVAL_SECOND: hh:mm:ss a
      GF_DATE_FORMATS_INTERVAL_MINUTE: hh:mm a
      GF_DATE_FORMATS_INTERVAL_HOUR: DD/MM hh:mm a
      GF_DATE_FORMATS_INTERVAL_DAY: DD/MM
      GF_DATE_FORMATS_INTERVAL_MONTH: MM-YYYY
      GF_DATE_FORMATS_INTERVAL_YEAR: YYYY
      VAR_BLOCKY_URL: https://blocky.${SECRET_DOMAIN}
    adminPassword: ${SECRET_GRAFANA_PASSWORD}
    grafana.ini:
      server:
        root_url: https://grafana.${SECRET_DOMAIN}
      paths:
        data: /var/lib/grafana/data
        logs: /var/log/grafana
        plugins: /var/lib/grafana/plugins
        provisioning: /etc/grafana/provisioning
      analytics:
        check_for_updates: false
      log:
        mode: console
      grafana_net:
        url: https://grafana.net
      auth.basic:
        disable_login_form: false
    dashboardProviders:
      dashboardproviders.yaml:
        apiVersion: 1
        providers:
          - name: default
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
    datasources:
      datasources.yaml:
        apiVersion: 1
        datasources:
          - name: Prometheus
            type: prometheus
            url: http://prometheus-operated:9090
            access: proxy
            isDefault: true
          - name: Loki
            type: loki
            access: proxy
            url: http://loki:3100
    dashboards:
      default:
        flux-cluster:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/cluster.json
          datasource: Prometheus
        flux-control-plane:
          url: https://raw.githubusercontent.com/fluxcd/flux2/main/manifests/monitoring/grafana/dashboards/control-plane.json
          datasource: Prometheus
        radarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/radarr.json
          datasource: Prometheus
        sonarr:
          url: https://raw.githubusercontent.com/k8s-at-home/grafana-dashboards/main/sonarr.json
          datasource: Prometheus
        network-overview:
          url: https://raw.githubusercontent.com/hyperbolic2346/sidero-cluster/main/manifests/blookums/apps/monitoring/grafana/dashboards/network-overview.json
          datasource: Prometheus
        home:
          url: https://raw.githubusercontent.com/hyperbolic2346/sidero-cluster/main/manifests/blookums/apps/monitoring/grafana/dashboards/home.json
          datasource: Prometheus
    sidecar:
      dashboards:
        enabled: true
        searchNamespace: ALL
        folderAnnotation: grafana_folder
        provider:
          foldersFromFilesStructure: true
      datasources:
        enabled: true
        searchNamespace: ALL
    plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
    serviceMonitor:
      enabled: true
    ingress:
      enabled: true
      ingressClassName: nginx
      annotations:
        kubernetes.io/tls-acme: 'true'
        # nginx.ingress.kubernetes.io/auth-url: http://oauth2-proxy.networking.svc.cluster.local/oauth2/auth
        # nginx.ingress.kubernetes.io/auth-signin: ${SECRET_AUTH_URL}
        cert-manager.io/cluster-issuer: letsencrypt-production
      hosts:
        - grafana.${SECRET_DOMAIN}
      tls:
        - secretName: grafana-tls
          hosts:
            - grafana.${SECRET_DOMAIN}
    persistence:
      enabled: true
      storageClassName: ceph-hdd-xfs
      size: 10Gi
      accessModes:
        - ReadWriteOnce
    podAnnotations:
      configmap.reloader.stakater.com/reload: grafana
